const Blog = require('../models/blog');
const axios = require('axios');

const createBlog = async (req, res) => {
  const { title, details } = req.body;

  if (!title || !details) {
    return res.status(400).json({ error: "Title and details are required." });
  }

  try {
    
    const apiUrl =
      "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent";
    const apiKey = process.env.GOOGLE_API_KEY; 

    const response = await axios.post(`${apiUrl}?key=${apiKey}`, {
      contents: [
        {
          parts: [
            { text: details }, 
          ],
        },
      ],
    });


    console.log("API Response:", response.data);

    const contentParts = response.data.candidates[0]?.content?.parts;
    if (!contentParts || contentParts.length === 0) {
      throw new Error("No content parts returned by the API.");
    }

    const summary = contentParts
      .map((part) => part.text)
      .join(" ")
      .trim();

    if (!summary) {
      throw new Error("No summary generated by the API.");
    }

    const newBlog = new Blog({
      title,
      details,
      summary,
    });

    await newBlog.save();

    res.status(201).json({
      message: "Blog created successfully!",
      blog: newBlog,
    });
  } catch (error) {
    console.error("Error creating blog:", error.message);
    if (error.response) {
      console.error("API Error Details:", error.response.data);
    }
    res.status(500).json({
      error: "Failed to create blog.",
      details: error.response?.data || error.message,
    });
  }
};

module.exports = { createBlog };
